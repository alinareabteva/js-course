
/*
Перебирающие методы массивов
forEach(),
map(),
filter(),
some(), every(),
reduce(), reduceRight()
 */

var array = [1,2,3,4,5,6,7,8,9,10,-1,-2,-3,-4];
var newArray = [];
var counter = 0;
var flattened = [[0, 1], [2, 3], [4, 5]];

//**************************************
//forEach()-обход элем. массива и для каждого вызывает указанную функцию
//не возвращает никакого значения

//Возвести каждый элем. массива в квадрат
/*
array.forEach(function (elem){
   newArray.push(elem *= elem);
});
console.log(newArray);
*/


//****************************************
//Проссумировать все элем. массива
/*
newArray = array.forEach(function (elem){
    counter += elem;
});
console.log(counter);
 */

//*****************************************
//map()-передает указанной функции каждый элем. массива, относительно которого он вызван
//и возвращает массив значений, возвращаемый этой функцией
//может возвращать результат

/*
array = array.map(function (elem){
    return elem *= elem;
});
console.log(array);
 */

//*******************************************
//filter()-возвращает массив, который содержит в себе подмножество элем.исходного массива
//данная функция должна возвр. true or false (фильтрация массива по заданным параметрам)

//Вывести все нечетные элем. массива
/*
array = array.filter(function (elem){
    return elem % 2;
});
console.log(array);
 */

//Вывести все четные элем. массива
/*
array = array.filter(function (elem){
    return elem % 3 && elem !== 1;
});
console.log(array);
 */

//*****************************************
//служат для валидации и проверки элем.
//some()-вернет true, если хотя бы 1 элем. пройдет проверку
//every()-принимает функцию, которая пробегаясь по элем. массива проверяет их зависимости от условия
//если все элем. проходят проверку, то возвр. true. если хоть один элем. не проходит проверку, возвр. false

//ответ false, так как в массиве есть 3 отрицательных элем.
/*
array = array.every(function (elem){
    return elem > 0;
});
console.log(array);
 */

//ответ true, так как в массиве есть хоть один положительный элем.
/*
array = array.some(function (elem){
    return elem > 0;
});
console.log(array);
*/


//*************************************************
//Используются для вычисления на основе массива какого либо единственного значения
//применяют callback функцию поочереди к кажд. элем. массива, сохраняя промежуточный результат
//можно передать начальное значение, а callback функция принемает 4 параметра
//reduce()-применяет функцию слева направо
//reduceRight()-применяет функцию справа налево

//Сумма всех элем. массива
/*
array = array.reduce(function (sum, elem){
    return sum += elem;
}, 15); //начальное значение
console.log(array);
 */

//Развернуть многомерный массив в одномерный
/*
array = flattened.reduce(function (sum, elem){
    return sum.concat(elem);
});
console.log(array);
 */

